name: Security Checks

on:
  schedule:
    - cron: '0 2 * * 1'  # 每周一凌晨2点运行
  workflow_dispatch:

permissions:
  contents: read

jobs:
  dependency-scan:
    name: 依赖安全扫描
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
        
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        
    - name: 安装依赖
      run: pnpm install --frozen-lockfile
        
    - name: 依赖安全扫描
      run: |
        echo "检查依赖安全漏洞..."
        pnpm audit --audit-level=high

  code-security:
    name: 代码安全检查
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 检查硬编码敏感信息
      run: |
        echo "检查硬编码敏感信息..."
        
        # 检查硬编码敏感信息
        if grep -r -i -E "(api_key|apikey|secret|token|password)\s*[:=]\s*['\"][a-zA-Z0-9+/]{20,}['\"]" \
           --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" \
           . | grep -v node_modules | grep -v -E "(placeholder|example|test|demo|sample|mock)"; then
          echo "发现硬编码敏感信息"
          exit 1
        fi
        
        # 检查 .env 文件
        if find . -name ".env" -not -path "./node_modules/*" -not -path "./.git/*" | grep -q .; then
          echo "发现 .env 文件被提交"
          exit 1
        fi
        
        echo "未发现硬编码敏感信息"

  security-report:
    name: 生成安全报告
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security]
    if: always()
    
    steps:
    - name: 生成安全报告
      run: |
        echo "安全检查报告"
        echo "生成时间: $(date)"
        echo "依赖安全扫描: ${{ needs.dependency-scan.result }}"
        echo "代码安全检查: ${{ needs.code-security.result }}"
        
        if [ "${{ needs.dependency-scan.result }}" = "success" ] && [ "${{ needs.code-security.result }}" = "success" ]; then
          echo "总体评价: 系统安全"
        else
          echo "总体评价: 发现问题，请查看详细日志"
        fi
